{"version":3,"sources":["Layout.js"],"names":["Layout","Component","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","render","props","isAuthenticated","classes","Content","children","mapStateToProps","auth","token"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAN,SAAqBC,gBAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AACNC,MAAAA,cAAc,EAAE;AADV,KADqB;;AAAA,SAK7BC,uBAL6B,GAKH,MAAM;AAC5B,WAAKC,QAAL,CAAc;AAACF,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH,KAP4B;;AAAA,SAS7BG,uBAT6B,GASH,MAAM;AAC9B,WAAKD,QAAL,CAAeE,SAAD,IAAa;AACzB,eAAO;AAACJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,SAAP;AACD,OAFD;AAGD,KAb4B;AAAA;;AAc7BK,EAAAA,MAAM,GAAG;AACP,WACE,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,gBAAD;AAAS,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,eAA5B;AAA6C,MAAA,mBAAmB,EAAE,KAAKJ,uBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,6BAAC,mBAAD;AAAY,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWC,eAA/B;AAAgD,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,cAAjE;AAAiF,MAAA,MAAM,EAAE,KAAKC,uBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAM,MAAA,SAAS,EAAEO,gBAAQC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKH,KAAL,CAAWI,QAA9C,CAHF,CADF;AAOD;;AAtB4B;;AAyB/B,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAC/B,SAAM;AACJQ,IAAAA,eAAe,EAAER,KAAK,CAACa,IAAN,CAAWC,KAAX,KAAqB;AADlC,GAAN;AAGD,CAJD;;eAMe,yBAAQF,eAAR,EAAyBd,MAAzB,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\n\nimport Aux from \"../../hoc/Aux\";\nimport classes from \"./Layout.css\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n      this.setState({showSideDrawer: false})\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState((prevState)=>{\n      return {showSideDrawer: !prevState.showSideDrawer}\n    })\n  }\n  render() {\n    return (\n      <Aux>\n        <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\n        <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n        <main className={classes.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nexport default connect(mapStateToProps)(Layout);\n"]}