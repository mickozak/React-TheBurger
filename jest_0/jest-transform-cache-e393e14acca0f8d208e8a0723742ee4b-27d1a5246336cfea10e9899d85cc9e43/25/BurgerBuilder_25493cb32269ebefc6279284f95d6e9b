d7b92dffd2ec1e4a0dd65a68103b38bb
"use strict";

var _interopRequireDefault = require("/home/programowanie4/Pulpit/Luty/React-TheBurger/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/programowanie4/Pulpit/Luty/React-TheBurger/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("/home/programowanie4/Pulpit/Luty/React-TheBurger/node_modules/@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireWildcard(require("react"));

var _Aux = _interopRequireDefault(require("../../hoc/Aux"));

var _Burger = _interopRequireDefault(require("../../components/Burger/Burger"));

var _BuildControls = _interopRequireDefault(require("../../components/Burger/BuildControls/BuildControls"));

var _Modal = _interopRequireDefault(require("../../components/UI/Modal/Modal"));

var _OrderSummary = _interopRequireDefault(require("../../components/OrderSummary/OrderSummary"));

var _Spinner = _interopRequireDefault(require("../../components/UI/Spinner/Spinner"));

var _withErrorHandler = _interopRequireDefault(require("../../hoc/withErrorHandler/withErrorHandler"));

var _reactRedux = require("react-redux");

var actions = _interopRequireWildcard(require("../../store/actions/index"));

var _axiosOrders = _interopRequireDefault(require("../../axios-orders"));

var _jsxFileName = "/home/programowanie4/Pulpit/Luty/React-TheBurger/src/containers/BurgerBuilder/BurgerBuilder.js";

class BurgerBuilder extends _react.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      purchasing: false
    };

    this.componentDidMount = () => {
      this.props.onInitIngredients();
    };

    this.purchaseHandler = () => {
      if (this.props.isAuthenticated) {
        this.setState({
          purchasing: true
        });
      } else {
        this.props.onSetAuthRedirectPath('/checkout');
        this.props.history.push('/auth');
      }
    };

    this.purchaseCancelHandler = () => {
      this.setState({
        purchasing: false
      });
    };

    this.purchaseContinueHandler = () => {
      this.props.onInitPurchase();
      this.props.history.push('/checkout');
    };
  }

  updatePurchaseState(ingredients) {
    const sum = Object.keys(ingredients).map(igKey => {
      return ingredients[igKey];
    }).reduce((sum, el) => {
      return sum + el;
    }, 0);
    return sum > 0;
  }

  render() {
    const disabledInfo = (0, _objectSpread2.default)({}, this.props.ings);

    for (let key in disabledInfo) {
      disabledInfo[key] = disabledInfo[key] <= 0;
    }

    let orderSummary = null;
    let burger = this.props.error ? _react.default.createElement("p", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 69
      },
      __self: this
    }, "Ingredients can't be loaded!") : _react.default.createElement(_Spinner.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 69
      },
      __self: this
    });

    if (this.props.ings) {
      burger = _react.default.createElement(_Aux.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 73
        },
        __self: this
      }, _react.default.createElement(_Burger.default, {
        ingredients: this.props.ings,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 74
        },
        __self: this
      }), _react.default.createElement(_BuildControls.default, {
        ingredientAdded: this.props.onIngredientAdded,
        ingredientRemoved: this.props.onIngredientRemoved,
        disabled: disabledInfo,
        purchanable: this.updatePurchaseState(this.props.ings),
        ordered: this.purchaseHandler,
        isAuth: this.props.isAuthenticated,
        priceProperty: this.props.price,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 75
        },
        __self: this
      }));
      orderSummary = _react.default.createElement(_OrderSummary.default, {
        ingredients: this.props.ings,
        purchaseCanceled: this.purchaseCancelHandler,
        purchaseContinued: this.purchaseContinueHandler,
        priceProperty: this.props.price,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87
        },
        __self: this
      });
    }

    return _react.default.createElement(_Aux.default, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 97
      },
      __self: this
    }, _react.default.createElement(_Modal.default, {
      show: this.state.purchasing,
      modalClosed: this.purchaseCancelHandler,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 98
      },
      __self: this
    }, orderSummary), burger);
  }

}

const mapStateToProps = state => {
  return {
    ings: state.burgerBuilder.ingredients,
    price: state.burgerBuilder.totalPrice,
    error: state.burgerBuilder.error,
    isAuthenticated: state.auth.token !== null
  };
};

const mapDispatchToProps = dispatch => {
  return {
    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),
    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),
    onInitIngredients: () => dispatch(actions.initIngredients()),
    onInitPurchase: () => dispatch(actions.purchaseInit()),
    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _withErrorHandler.default)(BurgerBuilder, _axiosOrders.default));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,