6be79a95f91181268c242b76244cbe8f
"use strict";

var _interopRequireDefault = require("/home/programowanie4/Pulpit/Luty/React-TheBurger/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _BuildControls = _interopRequireDefault(require("./BuildControls.css"));

var _BuildControl = _interopRequireDefault(require("./BuilControl/BuildControl"));

var _jsxFileName = "/home/programowanie4/Pulpit/Luty/React-TheBurger/src/components/Burger/BuildControls/BuildControls.js";
const controls = [{
  label: 'Salad',
  type: 'salad'
}, {
  label: 'Bacon',
  type: 'bacon'
}, {
  label: 'Cheese',
  type: 'cheese'
}, {
  label: 'Meat',
  type: 'meat'
}];

const buildControls = props => _react.default.createElement("div", {
  className: _BuildControls.default.BuildControls,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 15
  },
  __self: void 0
}, _react.default.createElement("p", {
  __source: {
    fileName: _jsxFileName,
    lineNumber: 16
  },
  __self: void 0
}, "Current Price: ", _react.default.createElement("strong", {
  __source: {
    fileName: _jsxFileName,
    lineNumber: 16
  },
  __self: void 0
}, props.price)), controls.map(ctrl => _react.default.createElement(_BuildControl.default, {
  key: ctrl.label,
  label: ctrl.label,
  added: () => props.ingredientAdded(ctrl.type),
  removed: () => props.ingredientRemoved(ctrl.type),
  disabled: props.disabled[ctrl.type],
  __source: {
    fileName: _jsxFileName,
    lineNumber: 18
  },
  __self: void 0
})), _react.default.createElement("button", {
  className: _BuildControls.default.OrderButton,
  disabled: !props.purchasable,
  onClick: props.ordered,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 25
  },
  __self: void 0
}, props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'));

var _default = buildControls;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1aWxkQ29udHJvbHMuanMiXSwibmFtZXMiOlsiY29udHJvbHMiLCJsYWJlbCIsInR5cGUiLCJidWlsZENvbnRyb2xzIiwicHJvcHMiLCJjbGFzc2VzIiwiQnVpbGRDb250cm9scyIsInByaWNlIiwibWFwIiwiY3RybCIsImluZ3JlZGllbnRBZGRlZCIsImluZ3JlZGllbnRSZW1vdmVkIiwiZGlzYWJsZWQiLCJPcmRlckJ1dHRvbiIsInB1cmNoYXNhYmxlIiwib3JkZXJlZCIsImlzQXV0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7OztBQUdBLE1BQU1BLFFBQVEsR0FBRyxDQUNiO0FBQUVDLEVBQUFBLEtBQUssRUFBRSxPQUFUO0FBQWtCQyxFQUFBQSxJQUFJLEVBQUU7QUFBeEIsQ0FEYSxFQUViO0FBQUVELEVBQUFBLEtBQUssRUFBRSxPQUFUO0FBQWtCQyxFQUFBQSxJQUFJLEVBQUU7QUFBeEIsQ0FGYSxFQUdiO0FBQUVELEVBQUFBLEtBQUssRUFBRSxRQUFUO0FBQW1CQyxFQUFBQSxJQUFJLEVBQUU7QUFBekIsQ0FIYSxFQUliO0FBQUVELEVBQUFBLEtBQUssRUFBRSxNQUFUO0FBQWlCQyxFQUFBQSxJQUFJLEVBQUU7QUFBdkIsQ0FKYSxDQUFqQjs7QUFPQSxNQUFNQyxhQUFhLEdBQUtDLEtBQUYsSUFDbEI7QUFBSyxFQUFBLFNBQVMsRUFBRUMsdUJBQVFDLGFBQXhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQ0k7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQVNGLEtBQUssQ0FBQ0csS0FBZixDQUFsQixDQURKLEVBRUtQLFFBQVEsQ0FBQ1EsR0FBVCxDQUFjQyxJQUFJLElBQ2YsNkJBQUMscUJBQUQ7QUFDSSxFQUFBLEdBQUcsRUFBRUEsSUFBSSxDQUFDUixLQURkO0FBRUksRUFBQSxLQUFLLEVBQUVRLElBQUksQ0FBQ1IsS0FGaEI7QUFHSSxFQUFBLEtBQUssRUFBRSxNQUFNRyxLQUFLLENBQUNNLGVBQU4sQ0FBdUJELElBQUksQ0FBQ1AsSUFBNUIsQ0FIakI7QUFJSSxFQUFBLE9BQU8sRUFBRSxNQUFNRSxLQUFLLENBQUNPLGlCQUFOLENBQXlCRixJQUFJLENBQUNQLElBQTlCLENBSm5CO0FBS0ksRUFBQSxRQUFRLEVBQUVFLEtBQUssQ0FBQ1EsUUFBTixDQUFlSCxJQUFJLENBQUNQLElBQXBCLENBTGQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFESCxDQUZMLEVBVUk7QUFDSSxFQUFBLFNBQVMsRUFBRUcsdUJBQVFRLFdBRHZCO0FBRUksRUFBQSxRQUFRLEVBQUUsQ0FBQ1QsS0FBSyxDQUFDVSxXQUZyQjtBQUdJLEVBQUEsT0FBTyxFQUFFVixLQUFLLENBQUNXLE9BSG5CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBRzZCWCxLQUFLLENBQUNZLE1BQU4sR0FBZSxXQUFmLEdBQTZCLGtCQUgxRCxDQVZKLENBREo7O2VBbUJlYixhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgY2xhc3NlcyBmcm9tICcuL0J1aWxkQ29udHJvbHMuY3NzJ1xuaW1wb3J0IEJ1aWxkQ29udHJvbCBmcm9tICcuL0J1aWxDb250cm9sL0J1aWxkQ29udHJvbCdcblxuXG5jb25zdCBjb250cm9scyA9IFtcbiAgICB7IGxhYmVsOiAnU2FsYWQnLCB0eXBlOiAnc2FsYWQnIH0sXG4gICAgeyBsYWJlbDogJ0JhY29uJywgdHlwZTogJ2JhY29uJyB9LFxuICAgIHsgbGFiZWw6ICdDaGVlc2UnLCB0eXBlOiAnY2hlZXNlJyB9LFxuICAgIHsgbGFiZWw6ICdNZWF0JywgdHlwZTogJ21lYXQnIH0sXG5dO1xuXG5jb25zdCBidWlsZENvbnRyb2xzID0gKCBwcm9wcyApID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5CdWlsZENvbnRyb2xzfT5cbiAgICAgICAgPHA+Q3VycmVudCBQcmljZTogPHN0cm9uZz57cHJvcHMucHJpY2V9PC9zdHJvbmc+PC9wPlxuICAgICAgICB7Y29udHJvbHMubWFwKCBjdHJsID0+IChcbiAgICAgICAgICAgIDxCdWlsZENvbnRyb2xcbiAgICAgICAgICAgICAgICBrZXk9e2N0cmwubGFiZWx9XG4gICAgICAgICAgICAgICAgbGFiZWw9e2N0cmwubGFiZWx9XG4gICAgICAgICAgICAgICAgYWRkZWQ9eygpID0+IHByb3BzLmluZ3JlZGllbnRBZGRlZCggY3RybC50eXBlICl9XG4gICAgICAgICAgICAgICAgcmVtb3ZlZD17KCkgPT4gcHJvcHMuaW5ncmVkaWVudFJlbW92ZWQoIGN0cmwudHlwZSApfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtwcm9wcy5kaXNhYmxlZFtjdHJsLnR5cGVdfSAvPlxuICAgICAgICApICl9XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5PcmRlckJ1dHRvbn1cbiAgICAgICAgICAgIGRpc2FibGVkPXshcHJvcHMucHVyY2hhc2FibGV9XG4gICAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5vcmRlcmVkfT57cHJvcHMuaXNBdXRoID8gJ09SREVSIE5PVycgOiAnU0lHTiBVUCBUTyBPUkRFUid9PC9idXR0b24+XG4gICAgPC9kaXY+XG4pO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGJ1aWxkQ29udHJvbHMiXX0=