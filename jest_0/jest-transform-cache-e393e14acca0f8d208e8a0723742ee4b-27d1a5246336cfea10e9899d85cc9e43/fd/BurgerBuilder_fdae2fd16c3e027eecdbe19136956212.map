{"version":3,"sources":["BurgerBuilder.js"],"names":["BurgerBuilder","Component","state","purchasing","componentDidMount","props","onInitIngredients","purchaseHandler","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","actions","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath","axios"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Aux from \"../../hoc/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport WithErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\n\nimport axios from \"../../axios-orders\";\n\n\nexport class BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount = () => {\n    this.props.onInitIngredients()\n  };\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0;\n  }\n\n  purchaseHandler = () => {\n    if(this.props.isAuthenticated){\n      this.setState({\n        purchasing: true\n      });\n    } else {\n      this.props.onSetAuthRedirectPath('/checkout')\n      this.props.history.push('/auth')\n    }\n   \n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push('/checkout')\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchanable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            isAuth={this.props.isAuthenticated}\n            priceProperty={this.props.price}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n          priceProperty={this.props.price}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n  }\n}\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(BurgerBuilder, axios));\n"]}